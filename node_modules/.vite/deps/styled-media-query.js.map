{
  "version": 3,
  "sources": ["../../styled-media-query/dist/styled-media-query.es.js"],
  "sourcesContent": ["import { css } from 'styled-components';\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\n/**\n * Converts breakpoint units in px to rem or em\n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} ratio [16] - size of 1 rem in px. What is your main font-size in px?\n * @param {'rem' | 'em'} unit\n */\nfunction pxToEmOrRem(breakpoints) {\n  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  var unit = arguments.length > 2 ? arguments[2] : undefined;\n  var newBreakpoints = {};\n\n  for (var key in breakpoints) {\n    var point = breakpoints[key];\n\n    if (String(point).includes('px')) {\n      newBreakpoints[key] = +(parseInt(point) / ratio) + unit;\n      continue;\n    }\n\n    newBreakpoints[key] = point;\n  }\n\n  return newBreakpoints;\n}\n/**\n * Converts breakpoint units in px to em \n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} ratio [16] - size of 1em in px. What is your main font-size in px?\n */\n\n\nfunction pxToEm(breakpoints) {\n  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  return pxToEmOrRem(breakpoints, ratio, 'em');\n}\n/**\n * Converts breakpoint units in px to rem \n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} ratio [16] - size of 1rem in px. What is your main font-size in px?\n */\n\nfunction pxToRem(breakpoints) {\n  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  return pxToEmOrRem(breakpoints, ratio, 'rem');\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n          @media (min-width: \", \") {\\n            \", \"\\n          }\\n        \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n          @media (max-width: \", \") {\\n            \", \"\\n          }\\n        \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    @media (min-width: \", \") and\\n      (max-width: \", \") {\\n      \", \"\\n    }\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    @media (min-width: \", \") {\\n      \", \"\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    @media (max-width: \", \") {\\n      \", \"\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Default media breakpoints\n * @type {Object}\n */\n\nvar defaultBreakpoints = {\n  huge: '1440px',\n  large: '1170px',\n  medium: '768px',\n  small: '450px'\n};\n\nfunction getSizeFromBreakpoint(breakpointValue) {\n  var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (breakpoints[breakpointValue]) {\n    return breakpoints[breakpointValue];\n  } else if (parseInt(breakpointValue)) {\n    return breakpointValue;\n  } else {\n    console.error('styled-media-query: No valid breakpoint or size specified for media.');\n    return '0';\n  }\n}\n/**\n * Media query generator\n * @param {Object} breakpoints - Map labels to breakpoint sizes\n * @return {Object} - Media generators for each breakpoint\n */\n\n\nfunction generateMedia() {\n  var breakpoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultBreakpoints;\n\n  var lessThan = function lessThan(breakpoint) {\n    return function () {\n      return css(_templateObject(), getSizeFromBreakpoint(breakpoint, breakpoints), css.apply(void 0, arguments));\n    };\n  };\n\n  var greaterThan = function greaterThan(breakpoint) {\n    return function () {\n      return css(_templateObject2(), getSizeFromBreakpoint(breakpoint, breakpoints), css.apply(void 0, arguments));\n    };\n  };\n\n  var between = function between(firstBreakpoint, secondBreakpoint) {\n    return function () {\n      return css(_templateObject3(), getSizeFromBreakpoint(firstBreakpoint, breakpoints), getSizeFromBreakpoint(secondBreakpoint, breakpoints), css.apply(void 0, arguments));\n    };\n  };\n\n  var oldStyle = Object.keys(breakpoints).reduce(function (acc, label) {\n    var size = breakpoints[label];\n\n    acc.to[label] = function () {\n      console.warn(\"styled-media-query: Use media.lessThan('\".concat(label, \"') instead of old media.to.\").concat(label, \" (Probably we'll deprecate it)\"));\n      return css(_templateObject4(), size, css.apply(void 0, arguments));\n    };\n\n    acc.from[label] = function () {\n      console.warn(\"styled-media-query: Use media.greaterThan('\".concat(label, \"') instead of old media.from.\").concat(label, \" (Probably we'll deprecate it)\"));\n      return css(_templateObject5(), size, css.apply(void 0, arguments));\n    };\n\n    return acc;\n  }, {\n    to: {},\n    from: {}\n  });\n  return Object.assign({\n    lessThan: lessThan,\n    greaterThan: greaterThan,\n    between: between\n  }, oldStyle);\n}\n/**\n * Media object with default breakpoints\n * @return {object} - Media generators for each size\n */\n\nvar index = generateMedia();\n/**\n * Usage: styled.div` ${media.from.medium`background: #000;`} `;\n * With this code, background for small and medium sizes will be `default` and for more than medium, will be `#000`\n */\n\nexport default index;\nexport { pxToEm, pxToRem, defaultBreakpoints, generateMedia };\n"],
  "mappings": "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",
  "names": ["_templateObject5", "_templateObject4", "_templateObject3", "_templateObject2", "_templateObject", "lessThan", "greaterThan", "between"]
}
